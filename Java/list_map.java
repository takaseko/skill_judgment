// 参照：侍エンジニア塾
// 【Java入門】MapとListの相互変換まとめ(key、valueのList化)

1 MapとListの違い
1_1 特長の違い
Map：インデックスとなるkeyとそのデータとなるvalueの両方を定義することができる。abstract
・keyには整数値のほかにString型などの変数なども指定することができる。keyに指定した変数から、valueを呼び出すことができる
・Mapのキーは重複させることはできない。
・keyと関連付けて値を保持する必要がある場合はMapが適しています。
List：Listは要素を格納した順に自動的に整数値のインデックスが生成され、値と紐づけされる
・Listの要素はインデックス番号を指定して、値を呼び出します。
・classまた、Listは要素の値で並び順を替えるソートができますが、Mapはそのままではできません。
・要素の順番が必要となる場合はListが適しています。
・MapのkeyやvalueをListや配列に変換する必要がある

1_2 定義の違い(HashMapとArrayList)
・MapやListはインターフェースですので、インスタンスを生成するには別のクラスを使用する必要がある
・Mapの場合はHashMapクラスを、Listの場合はArrayListクラスなど、インターフェースを実装したクラスを使用する
（例：定義の方法）
Map<String, Integer> map = new HashMap<>();
List<String> list = new ArrayList<>();
MapもListもインターフェースで、インスタンスを生成することはできませんが、オブジェクトは宣言できます。それぞれのインターフェースを実装したクラスのインスタンスをオブジェクトに格納しています。
なお、この例ではMapのkeyはString型、valueはInteger型で指定されています。型の指定はクラス型で行います。
int型などのプリミティブ型は使用できないので注意